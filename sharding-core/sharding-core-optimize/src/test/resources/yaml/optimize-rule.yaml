#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

dataSources:
  ds_0: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: org.h2.Driver
    jdbcUrl: jdbc:h2:mem:db0;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password:
  ds_1: !!com.zaxxer.hikari.HikariDataSource
    driverClassName: org.h2.Driver
    jdbcUrl: jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password:

shardingRule:
  tables:
    t_order:
      actualDataNodes: ds_${0..1}.t_order_${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: t_order_${user_id % 2}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_${order_id % 2}
      keyGenerator:
        type: TEST-OPTIMIZE
        column: order_id
    t_encrypt:
      actualDataNodes: ds_${0..1}.t_encrypt_${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: t_encrypt_${user_id % 2}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_encrypt_${order_id % 2}
      keyGenerator:
        type: TEST-OPTIMIZE
        column: order_id
    t_encrypt_query:
      actualDataNodes: ds_${0..1}.t_encrypt_query${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: t_encrypt_query${user_id % 2}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_encrypt_query${order_id % 2}
      keyGenerator:
        type: TEST-OPTIMIZE
        column: order_id
  encryptRule:
    encryptors:
      t_encryptor:
        type: test
      t_query_encryptor:
        type: assistedTest
    tables:
      t_encrypt:
        columns:
          order_id:
            cipherColumn: order_id
            encryptor: t_encryptor
      t_encrypt_query:
        columns:
          user_id:
            cipherColumn: user_id
            encryptor: t_query_encryptor
            assistedQueryColumn: assisted_user_id